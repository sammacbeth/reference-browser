
def addonsPath = 'src/main/assets/addons'
def addons = [
    'privacy@cliqz.com': 'https://s3.amazonaws.com/cdncliqz/update/edge/cliqz_privacy/master/12.37.0.129.1ffc8ce.zip',
    'dat@cliqz.com': 'https://s3.amazonaws.com/cdncliqz/update/dat_protocol_pre/dat@cliqz.com/dat_protocol-0.0.6.zip',
]

task deleteOldAddons(type: Delete) {
    delete addonsPath
    followSymlinks = true
}

def generateAddonTask(id, url, addonsPath) {
    def downloadTask = task "downloadAddon$id"(type: Download) {
        src url
        dest new File(downloadTaskDir, "${id}.zip")
    }
    task "updateAddon$id"(dependsOn: ["downloadAddon$id"], type: Copy) {
        from zipTree(downloadTask.dest)
        into "${addonsPath}/${id}"
    }
}

addons.each { id, url ->
    generateAddonTask(id, url, addonsPath)
    preBuild.dependsOn("updateAddon$id")
}
clean.dependsOn deleteOldAddons

android {
    defaultConfig {
        buildConfigField('String', 'ADDONS', "\"${addons.keySet().join(',')}\"")
    }
    aaptOptions{
        // default ignoreAssetsPattern list includes all files and folders starting with _
        // that breaks webextensions i18n as traslation are located in _locales folder
        ignoreAssetsPattern  '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}

//preBuild.dependsOn(updatePrivacyAddons)
// preBuild.dependsOn(updateConsentAddon)
